{
  "comments": [
    {
      "key": {
        "uuid": "119a81ee_dcad0263",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-03-31T17:01:59Z",
      "side": 1,
      "message": "Please change to:\n\n  ANDROID: selinux: add hook to restrict kernel module load",
      "revId": "34ab76a54cb1ff331a1c7c2d66b2eee7c9dba960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "119a81ee_1cb84aa1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-03-31T17:01:59Z",
      "side": 1,
      "message": "Please change to:\n\n  ANDROID: selinux: add hook to restrict kernel module load",
      "revId": "34ab76a54cb1ff331a1c7c2d66b2eee7c9dba960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "119a81ee_fcc9de29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-03-31T17:02:19Z",
      "side": 1,
      "message": "sorry, ignore this comment.",
      "parentUuid": "119a81ee_1cb84aa1",
      "revId": "34ab76a54cb1ff331a1c7c2d66b2eee7c9dba960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d13389d5_6a151720",
        "filename": "security/selinux/hooks.c",
        "patchSetId": 2
      },
      "lineNbr": 3541,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2016-03-31T17:19:15Z",
      "side": 1,
      "message": "Wondering if we ought to define a new class for these checks, since a) this only applies to regular files so we do not need to distinguish by file type/class, b) we will no doubt want similar permissions for the other kernel_read_file_id cases in mainline, and c) we have limited space in the access vector and might want these bits for general file permissions in the future.\nAlso, that also ensures no one accidentally allows it via an allow a b:file *; rule and makes it simpler to write a neverallow on that class.\nBTW, part of the IMA changes that introduced kernel_read_file and friends was to take policy load to the kernel, by writing the pathname to a pseudo fs node and having the kernel then directly load from the file.  Could possibly do likewise for SELinux.  At which point one could also do a direct policy_load check in the kernel on the policy file being loaded, and limit that to the rootfs, for example.",
      "revId": "34ab76a54cb1ff331a1c7c2d66b2eee7c9dba960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "119a81ee_97551344",
        "filename": "security/selinux/hooks.c",
        "patchSetId": 2
      },
      "lineNbr": 3541,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2016-03-31T18:26:16Z",
      "side": 1,
      "message": "Seems like we could use the system class. I\u0027ll put something together. The plan is to get upstream acceptance first, then backport to Android.",
      "parentUuid": "d13389d5_6a151720",
      "revId": "34ab76a54cb1ff331a1c7c2d66b2eee7c9dba960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}