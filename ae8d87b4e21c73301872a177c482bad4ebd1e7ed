{
  "comments": [
    {
      "key": {
        "uuid": "0d25b0ee_aaadefce",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-21T17:35:58Z",
      "side": 1,
      "message": "IS_ERR_OR_NULL is not really a bad design pattern if used properly. It lets you aggregate your error path. In your version you have 2 checks for errors and it\u0027s not immediately clear why.\n\nyou can still use IS_ERR_OR_NULL() and then in the return do,\n\nERR_PTR(table ? PTR_ERR(table) : -EINVAL);\n\nor set table \u003d ERR_PTR(-EINVAL) inside the error block.",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_8da5a59d",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2013-08-21T20:04:54Z",
      "side": 1,
      "message": "Changed the NULL case to a WARN_ON and made it clear heaps should be returning ERR_PTR",
      "parentUuid": "0d25b0ee_aaadefce",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_4a3c33a8",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 548,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-21T17:35:58Z",
      "side": 1,
      "message": "seems that the appropriate fix would be to fix the heaps to not return NULL, as here you still have the err_or_null paradigm, you are just splitting the test.",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_4abef361",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 548,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2013-08-21T20:04:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d25b0ee_4a3c33a8",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_e798c26e",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 1041,
      "author": {
        "id": 1018087
      },
      "writtenOn": "2013-08-21T12:38:06Z",
      "side": 1,
      "message": "Couldn\u0027t the dma_buf associated with fd still be NULL even though there is no error executing dma_buf_get?",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_8af58b03",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 1041,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2013-08-21T17:10:04Z",
      "side": 1,
      "message": "No -- that could only happen if dma_buf_export() created a file with NULL private_data, and there\u0027s an explicit check in dma_buf_export() against that.",
      "parentUuid": "0d25b0ee_e798c26e",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_4a5393e3",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 1
      },
      "lineNbr": 1407,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-21T17:35:58Z",
      "side": 1,
      "message": "this is wrong. If DEBUGFS is disabled, this will return ERR_PTR(-ENODEV); see debugfs.h.",
      "revId": "ae8d87b4e21c73301872a177c482bad4ebd1e7ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}