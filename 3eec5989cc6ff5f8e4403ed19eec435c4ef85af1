{
  "comments": [
    {
      "key": {
        "uuid": "AAALP3///u0\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2012-11-01T21:54:04Z",
      "side": 1,
      "message": "why?",
      "revId": "3eec5989cc6ff5f8e4403ed19eec435c4ef85af1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALPH//+58\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2012-11-01T22:00:02Z",
      "side": 1,
      "message": "In hopes of avoiding idle wakeups that do nothing other than run the governor worker to find out the system is very idle -- stretch the next governor timer wakeup to the next timer run.  The ondemand governor does this as well.  It tends to save power in certain use cases, although performance impacts are still being evaluated.\n\nDo you want this in the commit message?",
      "parentUuid": "AAALP3///u0\u003d",
      "revId": "3eec5989cc6ff5f8e4403ed19eec435c4ef85af1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALP3///pk\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2012-11-02T00:13:02Z",
      "side": 1,
      "message": "Yes, but I don\u0027t think this justifies moving from a timer to a work queue. There are three independent changes here. Running the timer on the same cpu, using a deferred timer, and running the timer in thread context. The first seems reasonable on any system (however, it my not make any practical difference if the timer ends up running on the same cpu anyway). The second should only happen on systems where the frequency does not affect idle power consumption. The last change does not seem to have any benefit.",
      "parentUuid": "AAALPH//+58\u003d",
      "revId": "3eec5989cc6ff5f8e4403ed19eec435c4ef85af1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALMn///5w\u003d",
        "filename": "drivers/cpufreq/cpufreq_interactive.c",
        "patchSetId": 1
      },
      "lineNbr": 765,
      "author": {
        "id": 1004359
      },
      "writtenOn": "2012-11-01T14:20:09Z",
      "side": 1,
      "message": "What\u0027s the advantage of deferrable work vs init_timer_deferrable()?",
      "revId": "3eec5989cc6ff5f8e4403ed19eec435c4ef85af1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAALPH///P8\u003d",
        "filename": "drivers/cpufreq/cpufreq_interactive.c",
        "patchSetId": 1
      },
      "lineNbr": 765,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2012-11-01T18:30:54Z",
      "side": 1,
      "message": "I chose it mainly for the schedule_delayed_work_on() interface for CPU affinity, to keep the timers on the same CPU as being managed, maybe a little cache affinity, but probably not a big deal.",
      "parentUuid": "AAALMn///5w\u003d",
      "revId": "3eec5989cc6ff5f8e4403ed19eec435c4ef85af1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}