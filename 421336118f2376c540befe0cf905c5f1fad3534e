{
  "comments": [
    {
      "key": {
        "uuid": "46d7b47e_0a663b51",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 76,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Potentially confusing to use the same field name as above.\nod_head would be more accurate IIUC; this points to the first/head avc_operation_decision_node which in turn contains its own od_list link to the next one, and so on.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_bff13f6a",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 238,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Unnecessary.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_d18ce489",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 266,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T18:54:18Z",
      "side": 1,
      "message": "Might as well just make this unconditional.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_4a9953c5",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 293,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Unnecessary.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_8d340510",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 306,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Just dest-\u003eallowed-\u003eperms, src-\u003eallowed-\u003eperms",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_7fbb2754",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 392,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Unnecessary.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_aa5baf8c",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 512,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Extra newline",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_8a606b32",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 529,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Extra newline",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_ea55a756",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 533,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Unnecessary whitespace change.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_7f9207d4",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 650,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "No need/unsafe to goto found - lock not yet assigned or locked; just return NULL directly.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_11578c2c",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 852,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "check and handle return value.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_a207649c",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 852,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T18:54:18Z",
      "side": 1,
      "message": "Define and use a new event value for this and handle it in the switch statement, e.g. AVC_CALLBACK_ADD_OPERATION.",
      "parentUuid": "66a67829_11578c2c",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_5f1e23e7",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Shouldn\u0027t that be !(flags \u0026 AVC_NO_CMD)?  Or alternatively (flags \u0026 AVC_CMD) if using the flag to indicate presence of cmd?",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_31a288ef",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T18:54:18Z",
      "side": 1,
      "message": "Rather than using flags, you could use a different AVC_CALLBACK_* event code when adding commands.",
      "parentUuid": "260c80ed_5f1e23e7",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_4dfded34",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 858,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T18:58:49Z",
      "side": 1,
      "message": "Never mind, since it is called from avc_denied() with AVC_CALLBACK_GRANT always and the cmd and flags provided by the caller.",
      "parentUuid": "66a67829_31a288ef",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_7fe68759",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 1033,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "od_local.allowed uninitialized here?",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_6de9d180",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 1037,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T18:54:18Z",
      "side": 1,
      "message": "Could take everything from od_local.allowed \u003d \u0026allowed; to here into a noinline helper function and thereby shrink the common case code path and stack.  Case where security_compute_operation() has to be called is a slow(er) path.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23eb9264_4a12a790",
        "filename": "security/selinux/avc.c",
        "patchSetId": 13
      },
      "lineNbr": 1037,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-03-24T20:28:18Z",
      "side": 1,
      "message": "It\u0027s required for both the fast and slow path - avc_copy_operation_decision copies into od_local",
      "parentUuid": "46d7b47e_6de9d180",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_ade10918",
        "filename": "security/selinux/include/avc.h",
        "patchSetId": 13
      },
      "lineNbr": 145,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Seems to be used in the opposite sense in the code.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_119e6c68",
        "filename": "security/selinux/include/avc.h",
        "patchSetId": 13
      },
      "lineNbr": 146,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Unused.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_b193185c",
        "filename": "security/selinux/include/security.h",
        "patchSetId": 13
      },
      "lineNbr": 108,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "More complex than needed since the expression itself will evaluate to 1 or 0 directly.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_11c2ecb1",
        "filename": "security/selinux/include/security.h",
        "patchSetId": 13
      },
      "lineNbr": 108,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T18:35:11Z",
      "side": 1,
      "message": "(1 \u0026 (perms[x \u003e\u003e 5] \u003e\u003e (x \u0026 0x1f)))",
      "parentUuid": "66a67829_b193185c",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3f6a249_00fc88b2",
        "filename": "security/selinux/ss/avtab.c",
        "patchSetId": 13
      },
      "lineNbr": 496,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-03-24T17:31:41Z",
      "side": 1,
      "message": "I rely on non-unique entries in the avtab to allow different operation types for a source/target/class/specified set. This would require changing to avtab_insert_nonunique for (specified \u0026 AVTAB_OPNUM). Will allowing non-unique key entries in the avtab break something? The conditional table allows it, and when searching the avtab for entries, the context_struct_compute_av accounts for it using avtab_search_node_next. Can I get your thoughts in this? libsepol requires a similar change.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a68a309d_26a25cef",
        "filename": "security/selinux/ss/avtab.c",
        "patchSetId": 13
      },
      "lineNbr": 496,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-24T18:10:10Z",
      "side": 1,
      "message": "That seems sane.  Originally context_struct_compute_av() only did a single avtab_search() call since originally all attributes were expanded by checkpolicy and all allow/auditallow/dontaudit rules on the same (source type, target type, target class) were merged to a single entry.  Then when I changed it to preserve policy in attribute form when simple, we switched to avtab_search_node/next.  Conditional policy always required search_node/next since there could be multiple entries for different conditional branches on the same key/specified.  Still need to maintain uniqueness for type transition/change/member rules as otherwise we\u0027d have an ambiguity.",
      "parentUuid": "a3f6a249_00fc88b2",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3f6a249_e6dad4ea",
        "filename": "security/selinux/ss/avtab.c",
        "patchSetId": 13
      },
      "lineNbr": 496,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-03-24T18:51:25Z",
      "side": 1,
      "message": "Ok great. Libsepol will continue to consolidate entries as appropriate, but will no longer enforce the uniqueness of source/target/class/specified entries.",
      "parentUuid": "a68a309d_26a25cef",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_911edc62",
        "filename": "security/selinux/ss/services.c",
        "patchSetId": 13
      },
      "lineNbr": 635,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "Only if ops-\u003elen \u003d\u003d 0, right?  Can be taken under the same conditional as the memset above.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_4d04cd42",
        "filename": "security/selinux/ss/services.c",
        "patchSetId": 13
      },
      "lineNbr": 937,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "For AVTAB_OPTYPE, where do we check that od-\u003etype is set in node-\u003edatum.u.ops-\u003eperms?",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "260c80ed_ff557756",
        "filename": "security/selinux/ss/services.c",
        "patchSetId": 13
      },
      "lineNbr": 960,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "So for any AVTAB_OPTYPE entry that matches on the other key fields, we unconditionally set all bits in op_perms-\u003eperms?  How do we know that this entry was for that ioctl command type?",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3fb9632_07c49cbd",
        "filename": "security/selinux/ss/services.c",
        "patchSetId": 13
      },
      "lineNbr": 960,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-03-24T20:28:18Z",
      "side": 1,
      "message": "AVTAB_OPTYPE is a way of selecting ioctl types where all the numbers are allowed. I added this to handle policy that looks like:\nsource target:class ~{ 0x8900 0x8911 0x8927-0x8930 0x8940 } \n\nHere all commands outside the 0x89 type are allowed. Rather than an avtab entry for each type, they can be combined into one entry - AVTAB_OPTYPE. If ioctl 0x8B1B was called on the above source/target/class grouping, it would hit the AVTAB_OPTYPE statement, see that all numbers are allowed within 0x8B and set all numbers to allowed (within that type). If on the other hand 0x8927 was called, the AVTAB_OPTYPE test would evaluate to 0, the AVTAB_OPNUM would find the matching type\u003d0x89 statement and set the permissions specified there.",
      "parentUuid": "260c80ed_ff557756",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a67829_510e3435",
        "filename": "security/selinux/ss/services.c",
        "patchSetId": 13
      },
      "lineNbr": 962,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "ARRAY_SIZE",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46d7b47e_ed12e18d",
        "filename": "security/selinux/ss/services.c",
        "patchSetId": 13
      },
      "lineNbr": 963,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-03-23T16:53:29Z",
      "side": 1,
      "message": "May be uninitialized here.",
      "revId": "421336118f2376c540befe0cf905c5f1fad3534e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}