{
  "comments": [
    {
      "key": {
        "uuid": "AAAA/n//+n4\u003d",
        "filename": "drivers/gpu/ion/ion.c",
        "patchSetId": 5
      },
      "lineNbr": 654,
      "author": {
        "id": 1006181
      },
      "writtenOn": "2011-04-13T15:44:30Z",
      "side": 1,
      "message": "as mentioned y\u0027day (just capture here for posterity), it would be nice if you let the heap implementation optionally provide a fault handler.. could be useful to track cache cleanness, and also probably other usages in cases where you have a GART/GTT or something that vaguely looks like one..",
      "revId": "1f1305e913be30439282e742bf1fa6cc61995e85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA/n//+nk\u003d",
        "filename": "include/linux/ion.h",
        "patchSetId": 5
      },
      "lineNbr": 206,
      "author": {
        "id": 1006181
      },
      "writtenOn": "2011-04-13T15:44:30Z",
      "side": 1,
      "message": "fwiw GEM does not try to standardize the allocation ioctl/api..  I think if you do you end up having to rev the API each time a new SoC comes along with something new and crazier.  Instead memory allocation is done by a vendor provided userspace driver (either their xorg driver, or hw specific vaapi/vdpau driver).  So when a buffer object (bo) is allocated for multimedia, maybe some of the options passed down to vendor specific kernel part would be different compared to bo\u0027s allocated for graphics pixmaps..  and might differ from gpu to gpu.\n\nInstead the approach is to standardize the API for passing around / manipulating buffers once they are allocated.\n\nI\u0027m not sure if that sort of approach fits in with the Android userspace architecture.. but I guess there is vendor specific OMX implementation, gralloc, etc.  So I guess it might?",
      "revId": "1f1305e913be30439282e742bf1fa6cc61995e85",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}