{
  "comments": [
    {
      "key": {
        "uuid": "25a4baca_5457605f",
        "filename": "fs/pstore/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1069543
      },
      "writtenOn": "2016-08-29T16:24:14Z",
      "side": 1,
      "message": "I didn\u0027t see any change to declarations for this in the CL... is the cast needed?",
      "range": {
        "startLine": 227,
        "startChar": 9,
        "endLine": 227,
        "endChar": 23
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25ecba3b_82afbc75",
        "filename": "fs/pstore/platform.c",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-29T20:33:43Z",
      "side": 1,
      "message": "I am specifically casting it to const void * because this comes in as char *. Pedantic correctness, and insurance that the caller does not disturb the psinfo-\u003ebuf contents. This is part of the cleanup requests for the kernel, when you touch it, you fix it.",
      "parentUuid": "25a4baca_5457605f",
      "range": {
        "startLine": 227,
        "startChar": 9,
        "endLine": 227,
        "endChar": 23
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a4baca_f4555454",
        "filename": "fs/pstore/pmsg.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1069543
      },
      "writtenOn": "2016-08-29T16:24:14Z",
      "side": 1,
      "message": "In another file, you cast this to a (const void *). Which should it be? void* seems better to me, but what is the type in the write_buf decl?",
      "range": {
        "startLine": 35,
        "startChar": 54,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25ecba3b_029bac61",
        "filename": "fs/pstore/pmsg.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-29T20:33:43Z",
      "side": 1,
      "message": "Good catch. This should be const void *, to remove the __user declaration. I was thinking C++ where one used const_cast and you have to leave the type the same, then you wrap another. C, we can do both in one cast ...",
      "parentUuid": "25a4baca_f4555454",
      "range": {
        "startLine": 35,
        "startChar": 54,
        "endLine": 35,
        "endChar": 68
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a4baca_918dfa33",
        "filename": "fs/pstore/ram.c",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-29T15:43:44Z",
      "side": 1,
      "message": "Nit: maybe make this a flag instead of an enum?\n\nfrom_user is legacy of the design of this feature, used to be a (boolean) int; where non-zero value references that the page came from the user. In the future it may become a problem if more values are added. For example, and this is a stretch, what if one has PSTORE_FROM_VMALLOC which would trigger the bottom end to free the buffer once it is done with it? Rename to buf_id to more closely associate it with buf, and to ensure it has a future.\n\nThe compressed boolean (int) is upstream, we maybe should overload it\u0027s location and define this a buf_flag with a bit for compressed source? That is a better choice, they placed compressed to just after buf, whereas I put from_user after buffer size.\n\nThis solves a shape change issue with the function, the callers that only have compressed will have a zero or one there, the FROM field is zero, we will denote as PSTORE_FROM_KERNEL as expected.",
      "range": {
        "startLine": 219,
        "startChar": 29,
        "endLine": 219,
        "endChar": 39
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a4baca_d4e7f0d7",
        "filename": "fs/pstore/ram.c",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-29T15:56:38Z",
      "side": 1,
      "message": "FYI, tried the port to replace bool compressed with int flags, the impact is more than expected as read, write and write_buf are all rewritten. I decided that should be split from this change as a dependency to this one as part of a patch group. It will require that the back-port to 3.10 will require the compressed pstore patch first to make this easy ...",
      "parentUuid": "25a4baca_918dfa33",
      "range": {
        "startLine": 219,
        "startChar": 29,
        "endLine": 219,
        "endChar": 39
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a4baca_94ce082d",
        "filename": "fs/pstore/ram.c",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1069543
      },
      "writtenOn": "2016-08-29T16:24:14Z",
      "side": 1,
      "message": "Already commented on the \"from_user\" name. Good name for boolean, bad name for enum. For upstream, I like \"int flags\" where COMPRESSED can be OR\u0027d with the buffer source.",
      "parentUuid": "25a4baca_d4e7f0d7",
      "range": {
        "startLine": 219,
        "startChar": 29,
        "endLine": 219,
        "endChar": 39
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a4baca_546e4031",
        "filename": "fs/pstore/ram_core.c",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1069543
      },
      "writtenOn": "2016-08-29T16:24:14Z",
      "side": 1,
      "message": "\"from_user\" seems like it would be the right name if this were a boolean...but since it is an enum, something like \"buffer_source\" would be better (really doesn\u0027t make sense that \"from_user\" \u003d \"FROM_KERNEL\", does it?\n\nComment applies to all the \"from_user\" decls below too.",
      "range": {
        "startLine": 253,
        "startChar": 36,
        "endLine": 253,
        "endChar": 45
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25ecba3b_82e17cc5",
        "filename": "fs/pstore/ram_core.c",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-29T20:33:43Z",
      "side": 1,
      "message": "I am prototyping out a change in this to an int buf_flags as I replace bool compressed with that.",
      "parentUuid": "25a4baca_546e4031",
      "range": {
        "startLine": 253,
        "startChar": 36,
        "endLine": 253,
        "endChar": 45
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a4baca_74694420",
        "filename": "include/linux/pstore.h",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1069543
      },
      "writtenOn": "2016-08-29T16:24:14Z",
      "side": 1,
      "message": "\"buffer_source\" ?",
      "range": {
        "startLine": 69,
        "startChar": 23,
        "endLine": 69,
        "endChar": 32
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25ecba3b_82e7bca6",
        "filename": "include/linux/pstore.h",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-29T20:33:43Z",
      "side": 1,
      "message": "I will show you the buf_flags idea next and see if you like it.",
      "parentUuid": "25a4baca_74694420",
      "range": {
        "startLine": 69,
        "startChar": 23,
        "endLine": 69,
        "endChar": 32
      },
      "revId": "f67be0c9a5215678fa02d9a6d63b845ffb76c956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}