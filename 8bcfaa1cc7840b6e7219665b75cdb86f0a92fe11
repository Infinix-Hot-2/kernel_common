{
  "comments": [
    {
      "key": {
        "uuid": "4485f957_fd20b2a6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-08-24T20:07:57Z",
      "side": 1,
      "message": "These two fields must be removed before submitting upstream. As such, please place them at the bottom of the commit message to make this easier to manage rather than splitting the commit text into two pieces.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 52
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a47f9520_cc8d043e",
        "filename": "Documentation/ABI/testing/sysfs-class-dual-role-usb",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1071633
      },
      "writtenOn": "2015-08-24T16:29:48Z",
      "side": 1,
      "message": "type: operating",
      "range": {
        "startLine": 29,
        "startChar": 10,
        "endLine": 29,
        "endChar": 18
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_710ceb47",
        "filename": "drivers/usb/phy/Kconfig",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-08-24T20:07:57Z",
      "side": 1,
      "message": "lower case",
      "range": {
        "startLine": 227,
        "startChar": 3,
        "endLine": 227,
        "endChar": 4
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4750d3f_e9554ecc",
        "filename": "drivers/usb/phy/class-dual-role.c",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1071633
      },
      "writtenOn": "2015-08-24T16:29:48Z",
      "side": 1,
      "message": "move to this point the function implementation to avoid forward definition ?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 68
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04b861a5_f54a7b2b",
        "filename": "drivers/usb/phy/class-dual-role.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2015-08-18T18:55:04Z",
      "side": 1,
      "message": "kfree(dual_role)",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 158,
        "endChar": 1
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a47f9520_6c0c1048",
        "filename": "drivers/usb/phy/class-dual-role.c",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1071633
      },
      "writtenOn": "2015-08-24T16:29:48Z",
      "side": 1,
      "message": "devres_free(dual_role); ?",
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "248c8586_e2e3284e",
        "filename": "drivers/usb/phy/class-dual-role.c",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-08-24T20:07:57Z",
      "side": 1,
      "message": "what protects this, and similar indexes, from getting out of range? This code is high risk if the max and the arrays (which are in two different files) do not match; this needs to be simplified and centralized.",
      "range": {
        "startLine": 260,
        "startChar": 24,
        "endLine": 260,
        "endChar": 36
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048f817d_5148c780",
        "filename": "drivers/usb/phy/class-dual-role.c",
        "patchSetId": 1
      },
      "lineNbr": 288,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-08-24T20:07:57Z",
      "side": 1,
      "message": "Corollary: What if ARRAY_SIZE(mode_text) !\u003d DUAL_ROLE_PROP_MODE_TOTAL?\n\nDrop use of the enums here, base totally on the ARRAY_SIZE? Compile time checks to make sure enum matches ARRAY_SIZE. Hint: #define _ARRAY_SIZE_ASSERT(_enum,_array) switch(0){case 0:case _enum\u003d\u003dARRAY_SIZE(_array):;} )",
      "range": {
        "startLine": 288,
        "startChar": 10,
        "endLine": 288,
        "endChar": 35
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04b861a5_d541770e",
        "filename": "drivers/usb/phy/class-dual-role.c",
        "patchSetId": 1
      },
      "lineNbr": 323,
      "author": {
        "id": 1021676
      },
      "writtenOn": "2015-08-18T18:55:04Z",
      "side": 1,
      "message": "kfree(dup_buf)",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 323,
        "endChar": 13
      },
      "revId": "8bcfaa1cc7840b6e7219665b75cdb86f0a92fe11",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}