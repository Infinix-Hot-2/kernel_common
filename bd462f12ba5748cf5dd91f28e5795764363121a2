{
  "comments": [
    {
      "key": {
        "uuid": "6d42d931_a32e4537",
        "filename": "security/selinux/include/avc.h",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T13:36:27Z",
      "side": 1,
      "message": "1. Not sure about splitting it up into two u8 arguments; we\u0027re already violating davem\u0027s maxim: \"If you write interfaces with more than 4 or 5 function arguments, it\u0027s possible that you and I cannot be friends.ï»¿\".\n2. Not sure about naming it \"token\".  Maybe \"subsystem\" or \"driver\" or anything at all that would be clearer.",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b91fb853_1274d445",
        "filename": "security/selinux/include/avc.h",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-01T14:37:44Z",
      "side": 1,
      "message": "1) what I like about splitting them up is that is how they are always used.\n2) Agreed. I like \"driver\" but that seems very ioctl specific. If netfilter were to use this and required more than 256 bits of permissions, what would be a good generic specifier?",
      "parentUuid": "6d42d931_a32e4537",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d42d931_9e0b5c25",
        "filename": "security/selinux/include/avc.h",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T15:32:35Z",
      "side": 1,
      "message": "Not sure as we haven\u0027t truly thought this through for netlink. We presently have hardcoded tables in security/selinux/nlmsgtab.c that map u16 nlmsg_type values for some netlink protocols to a small number of discrete nlmsg_* permissions, so that would be a candidate for conversion to using these extended permissions.  But nlmsg_type is a single u16 field of the nlmsghdr with no internal encoding and the defined values are typically just enumerations and usually seem to fit in a u8 (e.g. include/uapi/linux/rtnetlink.h RTM_MAX), so token/subsystem/driver might end up unused there in practice until/unless someone has more than that many nlmsg_type values for a given netlink protocol.  Unless we chose to encode the netlink protocol itself as the driver/subsystem and then\nthe nlmsg_type as the perm, and stop trying to map each netlink protocol to its own class (although I did just upstream a patch to update the SELinux netlink classes to match the current set of netlink protocols).\nFurther, we haven\u0027t really considered how to properly control NETLINK_GENERIC or NETLINK_CONNECTOR where it is simply a generic transport for communication and it is not at all clear how to map the nlmsg_type or even protocol-specific information like the genlmsghdr u8 cmd value.",
      "parentUuid": "b91fb853_1274d445",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d42d931_439be1ee",
        "filename": "security/selinux/include/security.h",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T13:36:27Z",
      "side": 1,
      "message": "This list is only used by the AVC, not by the security server, and therefore belongs in an AVC-private data structure that wraps the structure returned by the security server.  In the old version of the ptach, this was in the avc_operation_decision_node structure?",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b91fb853_52c00cbe",
        "filename": "security/selinux/include/security.h",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-01T14:37:44Z",
      "side": 1,
      "message": "It made for MUCH cleaner code.",
      "parentUuid": "6d42d931_439be1ee",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9fb8c32_9bb7e428",
        "filename": "security/selinux/include/security.h",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T15:32:35Z",
      "side": 1,
      "message": "Can you point to an example (before and after)?\nI don\u0027t quite see it, and the field is never used outside of avc.c.  Its presence in an out argument of the security server suggests that the security server is returning a list to the caller, which is not true and would be problematic anyway.",
      "parentUuid": "b91fb853_52c00cbe",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9fb8c32_883f98e8",
        "filename": "security/selinux/include/security.h",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T13:36:27Z",
      "side": 1,
      "message": "Ditto, was in the avc_operation_node structure?",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d42d931_a34ac5af",
        "filename": "security/selinux/ss/avtab.c",
        "patchSetId": 1
      },
      "lineNbr": 470,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T13:48:49Z",
      "side": 1,
      "message": "Let\u0027s change this to match the logic in libsepol i.e. treat it as an error if (vers \u003c POLICYDB_VERSION_XPERMS_IOCTL) \u0026\u0026 (key.specified \u0026 AVTAB_XPERMS).",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d42d931_03a1d91e",
        "filename": "security/selinux/ss/avtab.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-06-01T13:36:27Z",
      "side": 1,
      "message": "Names don\u0027t really convey the meaning clearly.  Can we use IOCTLNUM and IOCTLTYPE here unambiguously since it is specific to ioctls?  Or perhaps IOCTLDRIVER and IOCTLCMD?  Or IOCTLDRIVER and IOCTLFUNC?  Anything that would be clearer than SEQ/CODE.",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed56c9ec_c376c854",
        "filename": "security/selinux/ss/avtab.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2015-06-01T14:37:44Z",
      "side": 1,
      "message": "IOCTLDRIVER and IOCTLFUNC sound good to me. Thanks",
      "parentUuid": "6d42d931_03a1d91e",
      "revId": "bd462f12ba5748cf5dd91f28e5795764363121a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}